{"version":3,"sources":["components/Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","vote","title","poster_path","overview","vote_average","genre_ids","className","src","alt","query","SEARCH_API","reactKey","process","App","useState","movies","setMovies","searchTerm","setSearchTerm","searchGenre","setSearchGenre","getMovies","API","fetch","then","res","json","data","results","useEffect","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","console","log","length","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAoCeA,EAhCD,SAAC,GAA+D,IACtDC,EADPC,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,aAA8B,EAAhBC,UAW3D,OACE,sBAAKC,UAAU,QAAf,UACGJ,EACC,qBAAKK,IAhBK,mCAgBYL,EAAaM,IAAKP,IAExC,qBAAKM,IAAI,eAAeC,IAAKP,IAE/B,sBAAKK,UAAU,aAAf,UACE,6BAAKL,IAEL,sBAAMK,UAAS,eApBCN,EAoBqBI,EAnBrCJ,GAAQ,EACH,QACEA,GAAQ,EACV,SAEA,QAcL,SAAuDI,OAGzD,sBAAKE,UAAU,iBAAf,UACE,2CACA,4BAAIH,WC1BNM,EACJ,UAGIC,EACJ,sDAKIC,EAAWC,mCA2EFC,MAzEf,WAAgB,IAAD,EAEeC,mBAAS,IAFxB,mBAENC,EAFM,KAEEC,EAFF,OAGuBF,mBAAS,IAHhC,mBAGNG,EAHM,KAGMC,EAHN,OAIyBJ,mBAAS,IAJlC,mBAINK,EAJM,KAIOC,EAJP,KAMPC,EAAY,SAACC,GACjBC,MAAMD,GACHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUX,EAAUW,EAAKC,aAkCnC,OAJAC,qBAAU,WACRR,EAAU,GAAD,OAjDX,gFAiDW,OAAmBV,MAC3B,IAGD,qCACE,mCACA,sBAAMmB,SAzBkB,SAACC,GAC3BA,EAAMC,iBAEFb,IACFE,EAAU,GAAD,OAAIX,GAAJ,OAAiBC,GAAjB,OAA4BF,GAA5B,OAAoCU,IAC7CC,EAAe,MAoBf,SACI,uBACEa,KAAK,QACL3B,UAAU,QACV4B,YAAY,mBACZC,MAAOhB,EACPiB,SAlBkB,SAACL,GAC3BX,EAAeW,EAAMM,OAAOF,OAC5BG,QAAQC,IAAIR,QAmBR,sBAAMD,SA3CW,SAACC,GACtBA,EAAMC,iBAEFf,IACFI,EAAU,GAAD,OAAIX,GAAJ,OAAiBC,GAAjB,OAA4BF,GAA5B,OAAoCQ,IAC7CC,EAAc,MAsCZ,SACE,uBACEe,KAAK,SACL3B,UAAU,SACV4B,YAAY,kBACZC,MAAOlB,EACPmB,SA/Ba,SAACL,GACtBb,EAAca,EAAMM,OAAOF,eAkCzB,qBAAK7B,UAAU,kBAAf,SACGS,EAAOyB,OAAS,GACfzB,EAAO0B,KAAI,SAACC,GAAD,OAAW,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,aCvEnCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a6244522.chunk.js","sourcesContent":["import React from \"react\";\n\nconst IMAGE_API = \"https://image.tmdb.org/t/p/w1280\";\n\nconst Movie = ({ title, poster_path, overview, vote_average, genre_ids }) => {\n  const setVoteClass = (vote) => {\n    if (vote >= 8) {\n      return \"green\";\n    } else if (vote >= 6) {\n      return \"yellow\";\n    } else {\n      return \"red\";\n    }\n  };\n  \n  return (\n    <div className=\"movie\">\n      {poster_path ? (\n        <img src={IMAGE_API + poster_path} alt={title} />\n      ) : (\n        <img src=\"no-cover.png\" alt={title} />\n      )}\n      <div className=\"movie-info\">\n        <h3>{title}</h3>\n    \n        <span className={`tag ${setVoteClass(vote_average)}`}>{vote_average}</span>\n      </div>\n\n      <div className=\"movie-overview\">\n        <h2>Overview:</h2>\n        <p>{overview}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Movie;\n","import './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport Movie from \"./components/Movie\";\n\nconst query = \n  '&query=';\nconst FEATURED_API =\n  'https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=';\nconst SEARCH_API =\n  \"https://api.themoviedb.org/3/search/movie?&api_key=\";\n\nconst GENRES_API =\n  \"https://api.themoviedb.org/3/genre/tv/list?api_key=e3f377c7d615877e2ad1bcb6fd71fdb4\";\n\nconst reactKey = process.env.REACT_APP_MOVIEDB_API_KEY;\n\nfunction App() {\n  \n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchGenre, setSearchGenre] = useState(\"\");\n\n  const getMovies = (API) => {\n    fetch(API)\n      .then((res) => res.json())\n      .then((data) => setMovies(data.results));\n  };\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n\n    if (searchTerm) { //${reactKey}${query}\n      getMovies(`${SEARCH_API}${reactKey}${query}${searchTerm}`);\n      setSearchTerm(\"\");\n    }\n  };\n\n  const handleOnSubmitGenre = (event) => {\n    event.preventDefault();\n\n    if (searchGenre) { //${reactKey}${query}\n      getMovies(`${SEARCH_API}${reactKey}${query}${searchGenre}`);\n      setSearchGenre(\"\");\n    }\n  };\n\n  const handleOnChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleOnChangeGenre = (event) => {\n    setSearchGenre(event.target.value);\n    console.log(event);\n  };\n\n  useEffect(() => {\n    getMovies(`${FEATURED_API}${reactKey}`);\n  }, []);\n\n  return (\n    <>\n      <header>\n      <form onSubmit={handleOnSubmitGenre}>\n          <input\n            type=\"genre\"\n            className=\"genre\"\n            placeholder=\"Search Genres...\"\n            value={searchGenre}\n            onChange={handleOnChangeGenre}\n          />\n        </form>\n        <form onSubmit={handleOnSubmit}>\n          <input\n            type=\"search\"\n            className=\"search\"\n            placeholder=\"Search Title...\"\n            value={searchTerm}\n            onChange={handleOnChange}\n          />\n        </form>\n      </header>\n      <div className=\"movie-container\">\n        {movies.length > 0 &&\n          movies.map((movie) => <Movie key={movie.id} {...movie} />)}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}